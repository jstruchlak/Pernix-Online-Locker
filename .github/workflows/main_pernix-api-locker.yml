name: Deploy - pernix-api-locker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          cd server
          npm install
          npm run build --if-present

      - name: Zip artifact for deployment
        run: |
          cd server
          zip -r release.zip .  # Create a zip file of the server directory

      - name: List files for debugging
        run: ls -R server  # Verify the presence of release.zip

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: server/release.zip  # Path to the zip file

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: List files for debugging
        run: ls -R  # Verify downloaded files

      - name: Unzip artifact for deployment
        run: unzip -d server release.zip  # Unzip into server directory

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FD6EDD5C1F6B49989FF2EE749392A909 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BE267B1AE40E4066A64B5C53B9DD5D3A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_224E4995592B4998B113147275A5A529 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'pernix-api-locker'
          slot-name: 'Production'
          package: ./server  # Adjust if necessary
